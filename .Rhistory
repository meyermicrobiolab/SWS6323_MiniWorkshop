knitr::opts_chunk$set(echo = TRUE)
library(DESeq2)
library(ggplot2)
counts2 <-read.table("Untreated-vs-antibiotic_RGI-counts.txt",sep="\t",header=TRUE)
View(counts2)
meta <-read.table("metadata.txt",sep="\t",header=TRUE)
# remove disease samples to compare just before and after antibiotic treatment
meta2 <-meta[meta$type != "disease",]
write.table(meta2,"metadata_13.txt",sep="\t",col.names=NA)
View(meta2)
#construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData=counts2,
colData=meta2,
design=~type)
View(meta2)
counts <- read.table("20-samples-Bact-cds-counts.txt",sep="\t",header=TRUE)
counts2 <-read.table("Untreated-vs-antibiotic_RGI-counts.txt",sep="\t",header=TRUE)
meta2 <-read.table("metadata_13.txt",sep="\t",header=TRUE)
View(meta2)
#construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData=counts2,
colData=meta2,
design=~type)
counts <- read.table("20-samples-Bact-cds-counts.txt",sep="\t",header=TRUE)
# DeSeq is looking for only counts, without a first column of gene names, make the gene names row names.
mat <- counts[,-1]
rownames(mat) <- counts[,1]
# The Salmon counts have decimal places - round them up to prevent issues in deseq
counts2<-round(mat,digits=0)
# remove the disease samples from this first analysis
counts2$AMR1D <- NULL
counts2$AMR2D <- NULL
counts2$AMR3D <- NULL
counts2$AMR5D <- NULL
counts2$AMR7D <- NULL
counts2$AMR8D <- NULL
counts2$AMR9D <- NULL
counts3 <-counts2[rowSums(counts2[])>0,]
counts4 <- counts3
counts4$row_names <- row.names(counts4)
colnames(counts4)[14] <- 'transcript_id'
rgi <- read.table("rgi_out.txt",sep="\t",header=TRUE,quote="")
rgi_counts <-merge(rgi,counts4,by="transcript_id")
write.table(rgi_counts,"Untreated-vs-antibiotic_RGI-counts.txt",sep="\t",col.names=NA)
meta <-read.table("metadata.txt",sep="\t",header=TRUE)
# remove disease samples to compare just before and after antibiotic treatment
meta2 <-meta[meta$type != "disease",]
write.table(meta2,"metadata_13.txt",sep="\t",col.names=NA)
View(counts3)
View(counts4)
View(counts3)
#construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData=counts3,
colData=meta2,
design=~type)
#see what the object looks like
dds
dds <- DESeq(dds)
resultsNames(dds) # lists the coefficients
res <- results(dds, name="type_untreated_vs_antibiotic")
summary(res)
sink("DESeq2_results.txt")
print(res)
sink()
# or to shrink log fold changes association with condition:
res <- lfcShrink(dds, coef="type_untreated_vs_antibiotic", type="apeglm")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("apeglm")
library(apeglm)
# or to shrink log fold changes association with condition:
res <- lfcShrink(dds, coef="type_untreated_vs_antibiotic", type="apeglm")
knitr::opts_chunk$set(echo = TRUE)
counts <- read.table("Untreated-vs-antibiotic_RGI-counts.txt",sep="\t",header=TRUE)
meta <-read.table("metadata_13.txt",sep="\t",header=TRUE)
View(counts)
counts <- read.table("20-samples-Bact-cds-counts.txt",sep="\t",header=TRUE)
# DeSeq is looking for only counts, without a first column of gene names, make the gene names row names.
mat <- counts[,-1]
rownames(mat) <- counts[,1]
# The Salmon counts have decimal places - round them up to prevent issues in deseq
counts2<-round(mat,digits=0)
# remove the disease samples from this analysis
counts2$AMR1D <- NULL
counts2$AMR2D <- NULL
counts2$AMR3D <- NULL
counts2$AMR5D <- NULL
counts2$AMR7D <- NULL
counts2$AMR8D <- NULL
counts2$AMR9D <- NULL
counts3 <-counts2[rowSums(counts2[])>0,]
counts4 <- counts3
counts4$row_names <- row.names(counts4)
colnames(counts4)[14] <- 'transcript_id'
rgi <- read.table("rgi_out.txt",sep="\t",header=TRUE,quote="")
rgi_counts <-merge(rgi,counts4,by="transcript_id")
write.table(rgi_counts,"Untreated-vs-antibiotic_RGI-counts.txt",sep="\t",col.names=NA)
meta <-read.table("metadata.txt",sep="\t",header=TRUE)
# remove disease samples to compare just before and after antibiotic treatment
meta2 <-meta[meta$type != "disease",]
write.table(meta2,"metadata_13.txt",sep="\t",col.names=NA)
View(counts)
View(counts2)
View(counts3)
View(counts4)
View(mat)
View(counts4)
View(rgi)
View(rgi_counts)
View(meta2)
rgi_counts <- read.table("Untreated-vs-antibiotic_RGI-counts.txt",sep="\t",header=TRUE)
View(rgi_counts)
rgi_counts[1] <- NULL
View(rgi_counts)
library(dplyr)
beta <- read.table("Untreated-vs-antibiotic_AntibioticInactivation-RA.txt",sep="\t",header=TRUE)
#create a sum column to find most abundant beta-lactamase gene families then sort by abundance before plotting
beta$total <- rowSums(beta[,2:14])
beta <- beta[order(beta$total, decreasing = TRUE),]
top10 <-head(beta, 10)
top10_long <- melt(top10, id.vars=c("AMR.Gene.Family"))
library(dplyr)
library(ggplot2)
top10_long <- melt(top10, id.vars=c("AMR.Gene.Family"))
library(reshape2)
top10_long <- melt(top10, id.vars=c("AMR.Gene.Family"))
colnames(top10_long)[colnames(top10_long) == "variable"] <- "sample"
colnames(top10_long)[colnames(top10_long) == "value"] <- "proportion"
meta <-read.table("metadata_13.txt",sep="\t",header=TRUE)
meta$X <- NULL
beta10_meta <-merge(meta, top10_long, "sample")
beta10_meta$type <-factor(beta10_meta$type, levels=c("before","after"))
beta10_meta$AMR.Gene.Family <-factor(beta10_meta$AMR.Gene.Family, levels = c("OXA beta-lactamase","ADC beta-lactamases pending classification for carbapenemase activity","CfiA beta-lactamase","MOX beta-lactamase","SHV beta-lactamase","PER beta-lactamase","SPR beta-lactamase","subclass B3 PEDO beta-lactamase","GOB beta-lactamase","YRC Beta-lactamase"))
mycolors2 <-c("OXA beta-lactamase"="#332288","ADC beta-lactamases pending classification for carbapenemase activity"="#117733","CfiA beta-lactamase"="#CC6677","MOX beta-lactamase"="#88CCEE","SHV beta-lactamase"="#999933","PER beta-lactamase"="#882255","SPR beta-lactamase"="#44AA99","subclass B3 PEDO beta-lactamase"="#DDCC77","GOB beta-lactamase"="#AA4499","YRC Beta-lactamase"="#999999")
p2<-ggplot(beta10_meta, aes(fill=AMR.Gene.Family, x=sample, y=proportion)) +geom_bar(position="fill",stat="identity")+facet_grid(. ~ type, scales="free", space="free")+
theme_bw()+
theme(axis.text.x=element_text(angle=90))+
theme(strip.text.x=element_text(face="bold"))+
scale_fill_manual(values = mycolor2)
p2<-ggplot(beta10_meta, aes(fill=AMR.Gene.Family, x=sample, y=proportion)) +geom_bar(position="fill",stat="identity")+facet_grid(. ~ type, scales="free", space="free")+
theme_bw()+
theme(axis.text.x=element_text(angle=90))+
theme(strip.text.x=element_text(face="bold"))+
scale_fill_manual(values = mycolors2)
p2
pdf("beta-lactamases_top10.pdf", height=4)
p2<-ggplot(beta10_meta, aes(fill=AMR.Gene.Family, x=sample, y=proportion)) +geom_bar(position="fill",stat="identity")+facet_grid(. ~ type, scales="free", space="free")+
theme_bw()+
theme(axis.text.x=element_text(angle=90))+
theme(strip.text.x=element_text(face="bold"))+
scale_fill_manual(values = mycolors2)
p2
dev.off()
library(dplyr)
library(reshape2)
library(ggplot2)
rgi_counts <- read.table("Untreated-vs-antibiotic_RGI-counts.txt",sep="\t",header=TRUE)
rgi_counts[1] <- NULL
#subset = just "antibiotic inactivation" which includes beta-lactamases
inact <- rgi_counts[which(rgi_counts$Resistance.Mechanism=='antibiotic inactivation'),]
inact2 <- inact %>% group_by(AMR.Gene.Family) %>% summarize_at(vars(AMR1A:AMR10A), sum)
write.table(inact2,"Untreated-vs-antibiotic_AntibioticInactivation-counts.txt",sep="\t",col.names=NA)
#calculate relative abundance from counts
inact2_RA <- inact2[,-1]/colSums(inact2[,-1]) * 100
inact2_RA$AMR.Gene.Family <- inact2$AMR.Gene.Family
inact3 = inact2_RA[, c("AMR.Gene.Family", names(inact2_RA)[names(inact2_RA) != "AMR.Gene.Family"])]
write.table(inact3,"Untreated-vs-antibiotic_AntibioticInactivation-RA.txt",sep="\t",col.names=NA)
View(inact3)
inact3$total <- rowSums(inact3[,2:14])
inact3 <- inact3[order(inact3$total, decreasing = TRUE),]
View(inact3)
top10 <-head(inact3, 10)
View(top10)
write.table(top10,"Untreated-vs-antibiotic_AntibioticInactivation-RA_top10_inactivation.txt",sep="\t",col.names=NA)
View(top10)
top10_long <- melt(top10, id.vars=c("AMR.Gene.Family"))
colnames(top10_long)[colnames(top10_long) == "variable"] <- "sample"
colnames(top10_long)[colnames(top10_long) == "value"] <- "proportion"
meta <-read.table("metadata_13.txt",sep="\t",header=TRUE)
meta$X <- NULL
inact_meta <-merge(meta, top10_long, "sample")
inact_meta$type <-factor(inact_meta$type, levels=c("before","after"))
inact_meta$AMR.Gene.Family <-factor(inact_meta$AMR.Gene.Family, levels = c("OXA beta-lactamase","nitroimidazole reductase","tetracycline inactivation enzyme","chloramphenicol acetyltransferase (CAT)","streptogramin vgb lyase","
ANT(3'')","macrolide phosphotransferase (MPH)","ADC beta-lactamases pending classification for carbapenemase activity","CfiA beta-lactamase","MOX beta-lactamase"))
mycolors2 <-c("OXA beta-lactamase"="#332288","nitroimidazole reductase"="#117733","tetracycline inactivation enzyme"="#CC6677","chloramphenicol acetyltransferase (CAT)"="#88CCEE","streptogramin vgb lyase"="#999933","ANT(3'')"="#882255","macrolide phosphotransferase (MPH)"="#44AA99","ADC beta-lactamases pending classification for carbapenemase activity"="#DDCC77","CfiA beta-lactamase"="#AA4499","MOX beta-lactamase"="#999999")
p2<-ggplot(beta10_meta, aes(fill=AMR.Gene.Family, x=sample, y=proportion)) +geom_bar(position="fill",stat="identity")+facet_grid(. ~ type, scales="free", space="free")+
theme_bw()+
theme(axis.text.x=element_text(angle=90))+
theme(strip.text.x=element_text(face="bold"))+
scale_fill_manual(values = mycolors2)
p2<-ggplot(inact_meta, aes(fill=AMR.Gene.Family, x=sample, y=proportion)) +geom_bar(position="fill",stat="identity")+facet_grid(. ~ type, scales="free", space="free")+
theme_bw()+
theme(axis.text.x=element_text(angle=90))+
theme(strip.text.x=element_text(face="bold"))+
scale_fill_manual(values = mycolors2)
p2
View(top10)
pdf("inactivation_top10.pdf", height=4)
p2<-ggplot(inact_meta, aes(fill=AMR.Gene.Family, x=sample, y=proportion)) +geom_bar(position="fill",stat="identity")+facet_grid(. ~ type, scales="free", space="free")+
theme_bw()+
theme(axis.text.x=element_text(angle=90))+
theme(strip.text.x=element_text(face="bold"))+
scale_fill_manual(values = mycolors2)
p2
dev.off()
p2<-ggplot(inact_meta, aes(fill=AMR.Gene.Family, x=sample, y=proportion))+
geom_bar(position="fill",stat="identity")+
facet_grid(. ~ type, scales="free", space="free")+
theme_bw()+
theme(axis.text.x=element_text(angle=90))+
theme(strip.text.x=element_text(face="bold"))+
scale_fill_manual(values = mycolors2)
p2
pdf("inactivation_top10.pdf", height=4)
p2<-ggplot(inact_meta, aes(fill=AMR.Gene.Family, x=sample, y=proportion))+
geom_bar(position="fill",stat="identity")+
facet_grid(. ~ type, scales="free", space="free")+
theme_bw()+
theme(axis.text.x=element_text(angle=90))+
theme(strip.text.x=element_text(face="bold"))+
scale_fill_manual(values = mycolors2)
p2
dev.off()
rgi_counts <- read.table("Untreated-vs-antibiotic_RGI-counts.txt",sep="\t",header=TRUE)
rgi_counts[1] <- NULL
#subset = just "antibiotic inactivation" which includes beta-lactamases
inact <- rgi_counts[which(rgi_counts$Resistance.Mechanism=='antibiotic inactivation'),]
inact2 <- inact %>% group_by(AMR.Gene.Family) %>% summarize_at(vars(AMR1A:AMR10A), sum)
write.table(inact2,"Untreated-vs-antibiotic_AntibioticInactivation-counts.txt",sep="\t",col.names=NA)
#calculate relative abundance from counts
inact2_RA <- inact2[,-1]/colSums(inact2[,-1]) * 100
inact2_RA$AMR.Gene.Family <- inact2$AMR.Gene.Family
inact3 = inact2_RA[, c("AMR.Gene.Family", names(inact2_RA)[names(inact2_RA) != "AMR.Gene.Family"])]
write.table(inact3,"Untreated-vs-antibiotic_AntibioticInactivation-RA.txt",sep="\t",col.names=NA)
#find the top10 antibiotic inactivation gene families
inact3$total <- rowSums(inact3[,2:14])
inact3 <- inact3[order(inact3$total, decreasing = TRUE),]
top10 <-head(inact3, 10)
write.table(top10,"Untreated-vs-antibiotic_AntibioticInactivation-RA_top10_inactivation.txt",sep="\t",col.names=NA)
#merge metadata and count dataframes - start by converting mech from wide to long format
top10_long <- melt(top10, id.vars=c("AMR.Gene.Family"))
colnames(top10_long)[colnames(top10_long) == "variable"] <- "sample"
colnames(top10_long)[colnames(top10_long) == "value"] <- "proportion"
meta <-read.table("metadata_13.txt",sep="\t",header=TRUE)
meta$X <- NULL
inact_meta <-merge(meta, top10_long, "sample")
#plot as stacked bars
inact_meta$type <-factor(inact_meta$type, levels=c("before","after"))
inact_meta$AMR.Gene.Family <-factor(inact_meta$AMR.Gene.Family, levels = c("OXA beta-lactamase","nitroimidazole reductase","tetracycline inactivation enzyme","chloramphenicol acetyltransferase (CAT)","streptogramin vgb lyase","
ANT(3'')","macrolide phosphotransferase (MPH)","ADC beta-lactamases pending classification for carbapenemase activity","CfiA beta-lactamase","MOX beta-lactamase"))
#colorblind friendly palette from ggpubfigs: https://github.com/JLSteenwyk/ggpubfigs/blob/master/R/colors.R
#muted_nine = c("#332288", "#117733", "#CC6677", "#88CCEE", "#999933", "#882255", "#44AA99", "#DDCC77", "#AA4499")
mycolors2 <-c("OXA beta-lactamase"="#332288","nitroimidazole reductase"="#117733","tetracycline inactivation enzyme"="#CC6677","chloramphenicol acetyltransferase (CAT)"="#88CCEE","streptogramin vgb lyase"="#999933","ANT(3'')"="#882255","macrolide phosphotransferase (MPH)"="#44AA99","ADC beta-lactamases pending classification for carbapenemase activity"="#DDCC77","CfiA beta-lactamase"="#AA4499","MOX beta-lactamase"="#999999")
p2<-ggplot(inact_meta, aes(fill=AMR.Gene.Family, x=sample, y=proportion))+
geom_bar(position="fill",stat="identity")+
facet_grid(. ~ type, scales="free", space="free")+
theme_bw()+
theme(axis.text.x=element_text(angle=90))+
theme(strip.text.x=element_text(face="bold"))+
scale_fill_manual(values = mycolors2)
p2
View(top10)
View(inact_meta)
View(top10)
mycolors2 <-c("OXA beta-lactamase"="#332288","nitroimidazole reductase"="#117733","tetracycline inactivation enzyme"="#CC6677","chloramphenicol acetyltransferase (CAT)"="#88CCEE","streptogramin vgb lyase"="#999933","
ANT(3")"="#882255","macrolide phosphotransferase (MPH)"="#44AA99","ADC beta-lactamases pending classification for carbapenemase activity"="#DDCC77","CfiA beta-lactamase"="#AA4499","MOX beta-lactamase"="#999999")
mycolors2 <-c("OXA beta-lactamase"="#332288","nitroimidazole reductase"="#117733","tetracycline inactivation enzyme"="#CC6677","chloramphenicol acetyltransferase (CAT)"="#88CCEE","streptogramin vgb lyase"="#999933","ANT(3")"="#882255","macrolide phosphotransferase (MPH)"="#44AA99","ADC beta-lactamases pending classification for carbapenemase activity"="#DDCC77","CfiA beta-lactamase"="#AA4499","MOX beta-lactamase"="#999999")
mycolors2 <-c("OXA beta-lactamase"="#332288","nitroimidazole reductase"="#117733","tetracycline inactivation enzyme"="#CC6677","chloramphenicol acetyltransferase (CAT)"="#88CCEE","streptogramin vgb lyase"="#999933","ANT(3prime)"="#882255","macrolide phosphotransferase (MPH)"="#44AA99","ADC beta-lactamases pending classification for carbapenemase activity"="#DDCC77","CfiA beta-lactamase"="#AA4499","MOX beta-lactamase"="#999999")
p2<-ggplot(inact_meta, aes(fill=AMR.Gene.Family, x=sample, y=proportion))+
geom_bar(position="fill",stat="identity")+
facet_grid(. ~ type, scales="free", space="free")+
theme_bw()+
theme(axis.text.x=element_text(angle=90))+
theme(strip.text.x=element_text(face="bold"))+
scale_fill_manual(values = mycolors2)
p2
View(top10)
View(meta)
inact_meta$type <-factor(inact_meta$type, levels=c("before","after"))
inact_meta$AMR.Gene.Family <-factor(inact_meta$AMR.Gene.Family, levels = c("OXA beta-lactamase","nitroimidazole reductase","tetracycline inactivation enzyme","chloramphenicol acetyltransferase (CAT)","streptogramin vgb lyase","
ANT(3\")","macrolide phosphotransferase (MPH)","ADC beta-lactamases pending classification for carbapenemase activity","CfiA beta-lactamase","MOX beta-lactamase"))
mycolors2 <-c("OXA beta-lactamase"="#332288","nitroimidazole reductase"="#117733","tetracycline inactivation enzyme"="#CC6677","chloramphenicol acetyltransferase (CAT)"="#88CCEE","streptogramin vgb lyase"="#999933","ANT(3\")"="#882255","macrolide phosphotransferase (MPH)"="#44AA99","ADC beta-lactamases pending classification for carbapenemase activity"="#DDCC77","CfiA beta-lactamase"="#AA4499","MOX beta-lactamase"="#999999")
p2<-ggplot(inact_meta, aes(fill=AMR.Gene.Family, x=sample, y=proportion))+
geom_bar(position="fill",stat="identity")+
facet_grid(. ~ type, scales="free", space="free")+
theme_bw()+
theme(axis.text.x=element_text(angle=90))+
theme(strip.text.x=element_text(face="bold"))+
scale_fill_manual(values = mycolors2)
p2
inact_meta$AMR.Gene.Family <-factor(inact_meta$AMR.Gene.Family, levels = c("OXA beta-lactamase","nitroimidazole reductase","tetracycline inactivation enzyme","chloramphenicol acetyltransferase (CAT)","streptogramin vgb lyase",'
ANT(3")',"macrolide phosphotransferase (MPH)","ADC beta-lactamases pending classification for carbapenemase activity","CfiA beta-lactamase","MOX beta-lactamase"))
#colorblind friendly palette from ggpubfigs: https://github.com/JLSteenwyk/ggpubfigs/blob/master/R/colors.R
#muted_nine = c("#332288", "#117733", "#CC6677", "#88CCEE", "#999933", "#882255", "#44AA99", "#DDCC77", "#AA4499")
mycolors2 <-c("OXA beta-lactamase"="#332288","nitroimidazole reductase"="#117733","tetracycline inactivation enzyme"="#CC6677","chloramphenicol acetyltransferase (CAT)"="#88CCEE","streptogramin vgb lyase"="#999933",'ANT(3")'="#882255","macrolide phosphotransferase (MPH)"="#44AA99","ADC beta-lactamases pending classification for carbapenemase activity"="#DDCC77","CfiA beta-lactamase"="#AA4499","MOX beta-lactamase"="#999999")
p2<-ggplot(inact_meta, aes(fill=AMR.Gene.Family, x=sample, y=proportion))+
geom_bar(position="fill",stat="identity")+
facet_grid(. ~ type, scales="free", space="free")+
theme_bw()+
theme(axis.text.x=element_text(angle=90))+
theme(strip.text.x=element_text(face="bold"))+
scale_fill_manual(values = mycolors2)
p2
library(dplyr)
library(reshape2)
library(ggplot2)
rgi_counts <- read.table("Untreated-vs-antibiotic_RGI-counts.txt",sep="\t",header=TRUE)
rgi_counts[1] <- NULL
#subset = just "antibiotic inactivation" which includes beta-lactamases
inact <- rgi_counts[which(rgi_counts$Resistance.Mechanism=='antibiotic inactivation'),]
inact2 <- inact %>% group_by(AMR.Gene.Family) %>% summarize_at(vars(AMR1A:AMR10A), sum)
write.table(inact2,"Untreated-vs-antibiotic_AntibioticInactivation-counts.txt",sep="\t",col.names=NA)
#calculate relative abundance from counts
inact2_RA <- inact2[,-1]/colSums(inact2[,-1]) * 100
inact2_RA$AMR.Gene.Family <- inact2$AMR.Gene.Family
inact3 = inact2_RA[, c("AMR.Gene.Family", names(inact2_RA)[names(inact2_RA) != "AMR.Gene.Family"])]
write.table(inact3,"Untreated-vs-antibiotic_AntibioticInactivation-RA.txt",sep="\t",col.names=NA)
#find the top10 antibiotic inactivation gene families
inact3$total <- rowSums(inact3[,2:14])
inact3 <- inact3[order(inact3$total, decreasing = TRUE),]
top10 <-head(inact3, 10)
write.table(top10,"Untreated-vs-antibiotic_AntibioticInactivation-RA_top10_inactivation.txt",sep="\t",col.names=NA)
#merge metadata and count dataframes - start by converting mech from wide to long format
top10_long <- melt(top10, id.vars=c("AMR.Gene.Family"))
colnames(top10_long)[colnames(top10_long) == "variable"] <- "sample"
colnames(top10_long)[colnames(top10_long) == "value"] <- "proportion"
meta <-read.table("metadata_13.txt",sep="\t",header=TRUE)
meta$X <- NULL
inact_meta <-merge(meta, top10_long, "sample")
#plot as stacked bars
inact_meta$type <-factor(inact_meta$type, levels=c("before","after"))
inact_meta$AMR.Gene.Family <-factor(inact_meta$AMR.Gene.Family, levels = c("OXA beta-lactamase","nitroimidazole reductase","tetracycline inactivation enzyme","chloramphenicol acetyltransferase (CAT)","streptogramin vgb lyase",'
ANT(3")',"macrolide phosphotransferase (MPH)","ADC beta-lactamases pending classification for carbapenemase activity","CfiA beta-lactamase","MOX beta-lactamase"))
#colorblind friendly palette from ggpubfigs: https://github.com/JLSteenwyk/ggpubfigs/blob/master/R/colors.R
#muted_nine = c("#332288", "#117733", "#CC6677", "#88CCEE", "#999933", "#882255", "#44AA99", "#DDCC77", "#AA4499")
mycolors2 <-c("OXA beta-lactamase"="#332288","nitroimidazole reductase"="#117733","tetracycline inactivation enzyme"="#CC6677","chloramphenicol acetyltransferase (CAT)"="#88CCEE","streptogramin vgb lyase"="#999933",'ANT(3")'="#882255","macrolide phosphotransferase (MPH)"="#44AA99","ADC beta-lactamases pending classification for carbapenemase activity"="#DDCC77","CfiA beta-lactamase"="#AA4499","MOX beta-lactamase"="#999999")
#pdf("inactivation_top10.pdf", height=4)
p2<-ggplot(inact_meta, aes(fill=AMR.Gene.Family, x=sample, y=proportion))+
geom_bar(position="fill",stat="identity")+
facet_grid(. ~ type, scales="free", space="free")+
theme_bw()+
theme(axis.text.x=element_text(angle=90))+
theme(strip.text.x=element_text(face="bold"))+
scale_fill_manual(values = mycolors2)
p2
#dev.off()
inact_meta$type <-factor(inact_meta$type, levels=c("before","after"))
inact_meta$AMR.Gene.Family <-factor(inact_meta$AMR.Gene.Family, levels = c("OXA beta-lactamase","nitroimidazole reductase","tetracycline inactivation enzyme","chloramphenicol acetyltransferase (CAT)","streptogramin vgb lyase",'ANT(3")',"macrolide phosphotransferase (MPH)","ADC beta-lactamases pending classification for carbapenemase activity","CfiA beta-lactamase","MOX beta-lactamase"))
#colorblind friendly palette from ggpubfigs: https://github.com/JLSteenwyk/ggpubfigs/blob/master/R/colors.R
#muted_nine = c("#332288", "#117733", "#CC6677", "#88CCEE", "#999933", "#882255", "#44AA99", "#DDCC77", "#AA4499")
mycolors2 <-c("OXA beta-lactamase"="#332288","nitroimidazole reductase"="#117733","tetracycline inactivation enzyme"="#CC6677","chloramphenicol acetyltransferase (CAT)"="#88CCEE","streptogramin vgb lyase"="#999933",'ANT(3")'="#882255","macrolide phosphotransferase (MPH)"="#44AA99","ADC beta-lactamases pending classification for carbapenemase activity"="#DDCC77","CfiA beta-lactamase"="#AA4499","MOX beta-lactamase"="#999999")
#pdf("inactivation_top10.pdf", height=4)
p2<-ggplot(inact_meta, aes(fill=AMR.Gene.Family, x=sample, y=proportion))+
geom_bar(position="fill",stat="identity")+
facet_grid(. ~ type, scales="free", space="free")+
theme_bw()+
theme(axis.text.x=element_text(angle=90))+
theme(strip.text.x=element_text(face="bold"))+
scale_fill_manual(values = mycolors2)
p2
#dev.off()
`
View(top10)
View(top10)
View(top10)
View(top10)
knitr::opts_chunk$set(echo = TRUE)
library(dada2)
library(ggplot2)
library(phyloseq)
library(vegan)
library(knitr)
library(ALDEx2)
library(CoDaSeq)
library(ANCOMBC)
library(dada2)
library(ggplot2)
library(phyloseq)
library(vegan)
library(knitr)
library(ALDEx2)
library(CoDaSeq)
#library(ANCOMBC)
library(dplyr)
library(nloptr)
library(tibble)
library(randomcoloR)
#writeLines(capture.output(sessionInfo()), "sessionInfo.txt")
sessionInfo()
install.packages(c("bslib", "callr", "codetools", "data.table", "digest", "gh", "htmltools", "httpuv", "httr2", "igraph", "knitr", "lattice", "lme4", "munsell", "pkgbuild", "processx", "promises", "ragg", "RcppArmadillo", "remotes", "rstudioapi", "sass", "shiny", "tidyselect", "tinytex", "xfun", "zCompositions"))
install.packages(c("bslib", "callr", "codetools", "data.table", "digest", "gh", "htmltools", "httpuv", "httr2", "igraph", "knitr", "lattice", "lme4", "munsell", "pkgbuild", "processx", "promises", "ragg", "RcppArmadillo", "remotes", "rstudioapi", "sass", "shiny", "tidyselect", "tinytex", "xfun", "zCompositions"))
install.packages(c("bslib", "callr", "codetools", "data.table", "digest", "gh", "htmltools", "httpuv", "httr2", "igraph", "knitr", "lattice", "lme4", "munsell", "pkgbuild", "processx", "promises", "ragg", "RcppArmadillo", "remotes", "rstudioapi", "sass", "shiny", "tidyselect", "tinytex", "xfun", "zCompositions"))
install.packages(c("bslib", "callr", "codetools", "data.table", "digest", "gh", "htmltools", "httpuv", "httr2", "igraph", "knitr", "lattice", "lme4", "munsell", "pkgbuild", "processx", "promises", "ragg", "RcppArmadillo", "remotes", "rstudioapi", "sass", "shiny", "tidyselect", "tinytex", "xfun", "zCompositions"))
install.packages(c("bslib", "callr", "codetools", "data.table", "digest", "gh", "htmltools", "httpuv", "httr2", "igraph", "knitr", "lattice", "lme4", "munsell", "pkgbuild", "processx", "promises", "ragg", "RcppArmadillo", "remotes", "rstudioapi", "sass", "shiny", "tidyselect", "tinytex", "xfun", "zCompositions"))
# RELOAD THE SAVED INFO FROM HERE (if you have closed the project):
seqtab.nochim <- readRDS("~/Documents/SWS6323_MiniWorkshop/seqtab.rds")
library(dada2)
library(ggplot2)
library(phyloseq)
library(vegan)
library(CoDaSeq)
library(dplyr)
library(nloptr)
library(tibble)
library(randomcoloR)
writeLines(capture.output(sessionInfo()), "sessionInfo.txt")
setwd("~/Documents/GitHub/SWS6323_MiniWorkshop")
# RELOAD THE SAVED INFO FROM HERE (if you have closed the project):
seqtab.nochim <- readRDS("~/Documents/SWS6323_MiniWorkshop/seqtab.rds")
setwd("/Users/juliemeyer/Documents/GitHub/SWS6323_MiniWorkshop")
# RELOAD THE SAVED INFO FROM HERE (if you have closed the project):
seqtab.nochim <- readRDS("~/Documents/SWS6323_MiniWorkshop/seqtab.rds")
# RELOAD THE SAVED INFO FROM HERE (if you have closed the project):
seqtab.nochim <- readRDS("~/Documents/Github/SWS6323_MiniWorkshop/seqtab.rds")
